
# pragma once

/**
 *  @brief MASKS
 * 
 *  Masks are stored in a mask array, for values < 8bytes
 *  bytes mask must be used for pattern matching.
 *  Otherwise, for bigher values raws of 8 bytes of data
 *  filled by the same value can be used.
 *  
 *  Mask can be indexed using a differanet allignment.
 *  There's 2 way of index a mask:
 *  - By size:
 *  e.g. 0x01, 0x02, 0x03 ...
 *  - By familly:
 *  e.g. 0x01, 0x0100, 0x010000
 *  WARNING: Exemple data values are just an exemple.
 * 
 *  TO achieve that mask must be written into the array
 *  following an rigourous sort.
*/

# include <local_types.h>

extern uint_size_t* mask_ptr;

uint_size_t short_masks[] = {
    0x0000000000000030, 0x0000000000003000, 0x0000000000300000, 0x0000000030000000,
    0x0000003000000000, 0x0000300000000000, 0x0030000000000000, 0x3000000000000000, // '0'
    0x0000000000000031, 0x0000000000003100, 0x0000000000310000, 0x0000000031000000,
    0x0000003100000000, 0x0000310000000000, 0x0031000000000000, 0x3100000000000000, // '1'
    0x0000000000000032, 0x0000000000003200, 0x0000000000320000, 0x0000000032000000,
    0x0000003200000000, 0x0000320000000000, 0x0032000000000000, 0x3200000000000000, // '2'
    0x0000000000000033, 0x0000000000003300, 0x0000000000330000, 0x0000000033000000,
    0x0000003300000000, 0x0000330000000000, 0x0033000000000000, 0x3300000000000000, // '3'
    0x0000000000000034, 0x0000000000003400, 0x0000000000340000, 0x0000000034000000,
    0x0000003400000000, 0x0000340000000000, 0x0034000000000000, 0x3400000000000000, // '4'
    0x0000000000000035, 0x0000000000003500, 0x0000000000350000, 0x0000000035000000,
    0x0000003500000000, 0x0000350000000000, 0x0035000000000000, 0x3500000000000000, // '5'
    0x0000000000000036, 0x0000000000003600, 0x0000000000360000, 0x0000000036000000,
    0x0000003600000000, 0x0000360000000000, 0x0036000000000000, 0x3600000000000000, // '6'
    0x0000000000000037, 0x0000000000003700, 0x0000000000370000, 0x0000000037000000,
    0x0000003700000000, 0x0000370000000000, 0x0037000000000000, 0x3700000000000000, // '7'
    0x0000000000000038, 0x0000000000003800, 0x0000000000380000, 0x0000000038000000,
    0x0000003800000000, 0x0000370000000000, 0x0037000000000000, 0x3700000000000000, // '8'
    0x0000000000000039, 0x0000000000003900, 0x0000000000390000, 0x0000000039000000,
    0x0000003900000000, 0x0000390000000000, 0x0039000000000000, 0x3900000000000000, // '9'
};

# define U64_SMASK_FAMILLY_INDEX 1UL
# define U64_SMASK_SIZE_INDEX 8UL

# define FAMILLY_MEMBERS 8UL

# define U64_SMASK_FAMILLY_BOUNDS (sizeof(short_masks) / sizeof(*short_masks))
# define U64_SMASK_SIZE_BOUNDS 10UL

uint_size_t long_masks[] = {
    0x3030303030303030, 0x3131313131313131, 0x3232323232323232, 0x3333333333333333,
    0x3434343434343434, 0x3535353535353535, 0x3636363636363636, 0x3737373737373737,
    0x3838383838383838, 0x3939393939393939
};
